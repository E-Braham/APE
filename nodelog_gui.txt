Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent procexec {'subject': 'target.clearProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', None]}
Sent appa {'subject': 'target.apparatus.applyTemplate', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', 'e_reply']}, 'kwargs': {'args': [[{'PMMA': 'ZZ1'}], []], 'kwargs': {}}, 'args': ['FlexPrinterGUI']}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'gantry', 'axes']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['User', 'User_GUI', 'procexec', 'gui']}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'type']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'type'], 'value': 'User_GUI'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'address']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'address'], 'value': 'gui'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'addresstype']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype'], 'value': 'zmqNode'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.Connect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', 'e_reply']}, 'kwargs': {'simulation': True}}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['consol', 'sensor', 'guiconsol', 'User']]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['consol', 'sensor', 'guiconsol', 'User']]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}, 'args': [True]}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Handled appa {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}, 'args': ['User', 'Connect', 'gui']}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].Connect', 'kwargs': {}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['A3200', 'Aerotech', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['consol', 'sensor', 'guiconsol', 'User']}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}]]]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', ['gantry', 'pump0', 'aeropump0', 'system']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['gantry', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Move', 'Set_Motion', 'set_DO', 'Run', 'getPosition', 'getAI', 'Load', 'LogData_Start', 'LogData_Stop']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['pump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['aeropump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['system', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Dwell', 'Run']]}
Sent procexec {'subject': 'target.createProcedure', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.createProcedure', 'e_reply']}, 'args': ['', 'User_StartUp', {}]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.createProcedure', None]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', [{'device': '', 'procedure': 'User_StartUp', 'requirements': {}}]]}
Sent procexec {'subject': 'target.doProcedure', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.doProcedure', 'e_reply']}, 'args': ['', 'User_StartUp']}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'n'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['n\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInputOptions', 'kwargs': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['n\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Bob'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['Bob\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInput', 'kwargs': {'message': 'What is your name?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['Bob\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': '23'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['23\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInput', 'kwargs': {'message': 'What is the lab temperature in Celsius?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['23\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': '23'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['23\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInput', 'kwargs': {'message': 'What is the lab relative humidity in percent?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['23\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Bleh and stuff'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['Bleh and stuff\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInput', 'kwargs': {'message': 'What are you hoping to accomplish with this experiment?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['Bleh and stuff\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Not'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['Not\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInput', 'kwargs': {'message': 'How is this experiment different than the last?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['Not\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'y'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['y\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInputOptions', 'kwargs': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['y\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'Name'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['Name\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInputOptions', 'kwargs': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['Name\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Fred'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['Fred\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInput', 'kwargs': {'message': 'What is your name?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['Fred\n']}}
Sent appa {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'n'}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['n\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].GetInputOptions', 'kwargs': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['n\n']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.doProcedure', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}], ['->', {'name': 'User_StartUp', 'information': {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}, 'time': 1565961152.5524945}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961152.5864038}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961152.6651947}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961154.2574914}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961154.3043656}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961154.383165}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bob', 'time': 1565961156.1189115}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961156.1627934}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961156.2306128}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961158.6068869}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961158.6512449}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961158.715074}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961159.7542953}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961159.8091497}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961159.8719828}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bleh and stuff', 'time': 1565961165.4296985}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961165.4765732}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961165.543395}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Not', 'time': 1565961168.6634758}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961168.7083566}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961168.7931294}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'y', 'time': 1565961172.0298407}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961172.0747228}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961172.1385517}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'Name', 'time': 1565961173.5044076}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961173.5512836}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961173.6390474}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Fred', 'time': 1565961175.6317208}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961175.678595}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961175.7623706}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961178.7461555}]]]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['User is disconnected.\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].Disconnect', 'kwargs': {}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['User is disconnected.\n']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['A3200', 'Aerotech', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': False}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': False}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': False, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': False, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': False, 'descriptors': ['consol', 'sensor', 'guiconsol', 'User']}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}, 'StartUp': {'file': {}, 'info': {'Name': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'answer': 'Fred'}, 'Temperature': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'answer': '23'}, 'Humidity': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'answer': '23'}, 'Reason': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'answer': 'Bleh and stuff'}, 'Difference': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'answer': 'Not'}}}, 'procedures': {'User_Consol_InputOptions': {'result': 'n'}, 'User_Consol_Input': {'result': 'Fred'}}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}], ['->', {'name': 'User_StartUp', 'information': {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}, 'time': 1565961152.5524945}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961152.5864038}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961152.6651947}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961154.2574914}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961154.3043656}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961154.383165}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bob', 'time': 1565961156.1189115}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961156.1627934}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961156.2306128}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961158.6068869}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961158.6512449}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961158.715074}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961159.7542953}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961159.8091497}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961159.8719828}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bleh and stuff', 'time': 1565961165.4296985}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961165.4765732}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961165.543395}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Not', 'time': 1565961168.6634758}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961168.7083566}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961168.7931294}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'y', 'time': 1565961172.0298407}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961172.0747228}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961172.1385517}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'Name', 'time': 1565961173.5044076}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961173.5512836}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961173.6390474}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Fred', 'time': 1565961175.6317208}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961175.678595}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961175.7623706}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961178.7461555}], ['->', {'name': 'eproc_gantry_Disconnect', 'information': {}, 'time': 1565961186.0482252}], ['->', {'name': 'eproc_pump0_Disconnect', 'information': {}, 'time': 1565961186.0661776}], ['->', {'name': 'eproc_aeropump0_Disconnect', 'information': {}, 'time': 1565961186.096839}], ['->', {'name': 'eproc_system_Disconnect', 'information': {}, 'time': 1565961186.1247954}], ['->', {'name': 'eproc_User_Disconnect', 'information': {}, 'time': 1565961186.1437438}]]]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent procexec {'subject': 'target.clearProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', None]}
Sent appa {'subject': 'target.apparatus.applyTemplate', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', 'e_reply']}, 'kwargs': {'args': [[{'PMMA': 'ZZ1'}], []], 'kwargs': {}}, 'args': ['FlexPrinterGUI']}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'gantry', 'axes']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['User', 'User_GUI', 'procexec', 'gui']}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'type']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'type'], 'value': 'User_GUI'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'address']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'address'], 'value': 'gui'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'addresstype']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype'], 'value': 'zmqNode'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.Connect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', 'e_reply']}, 'kwargs': {'simulation': True}}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['User', 'sensor', 'consol', 'guiconsol']]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['User', 'sensor', 'consol', 'guiconsol']]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}, 'args': [True]}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Handled appa {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}, 'args': ['User', 'Connect', 'gui']}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].Connect', 'kwargs': {}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['Aerotech', 'A3200', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'pump', 'UltimusV', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'pump', 'UltimusV', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['User', 'sensor', 'consol', 'guiconsol']}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961396.6600344}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961396.7747283}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961396.9352982}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961396.9991279}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961397.0479977}]]]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', ['gantry', 'pump0', 'aeropump0', 'system']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['gantry', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Move', 'Set_Motion', 'set_DO', 'Run', 'getPosition', 'getAI', 'Load', 'LogData_Start', 'LogData_Stop']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['pump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['aeropump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['system', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Dwell', 'Run']]}
Sent procexec {'subject': 'target.createProcedure', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.createProcedure', 'e_reply']}, 'args': ['', 'User_StartUp', {}]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.createProcedure', None]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', [{'device': '', 'procedure': 'User_StartUp', 'requirements': {}}]]}
