Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', None]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent procexec {'subject': 'target.clearProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', None]}
Sent appa {'subject': 'target.apparatus.applyTemplate', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', 'e_reply']}, 'kwargs': {'args': [[{'PMMA': 'ZZ1'}], [{'name': 'camera', 'axis': 'ZZ2', 'type': 'IDS_ueye'}]], 'kwargs': {}}, 'args': ['FlexPrinterGUI']}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'camera': {'speed': 40, 'axismask': {'Z': 'ZZ2'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'camera': {'type': 'IDS_ueye', 'addresstype': 'zmqNode', 'address': 'procexec', 'settle_time': 5}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}, 'camera@mark': {'X': '', 'Y': '', 'ZZ2': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal', 'camera@mark'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'gantry', 'axes']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['User', 'User_GUI', 'procexec', 'gui']}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'type']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'type'], 'value': 'User_GUI'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'address']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'address'], 'value': 'gui'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'addresstype']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype'], 'value': 'zmqNode'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.Connect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', 'e_reply']}, 'kwargs': {'simulation': True}}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['User', 'sensor', 'consol', 'guiconsol']]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['User', 'sensor', 'consol', 'guiconsol']]}}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}, 'args': [True]}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Handled appa {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}, 'args': ['User', 'Connect', 'gui']}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].Connect', 'kwargs': {}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['Aerotech', 'sensor', 'motion', 'A3200'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'camera': {'speed': 40, 'axismask': {'Z': 'ZZ2'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['pump', 'Ultimus', 'Nordson', 'pressure', 'UltimusV'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['pump', 'A3200', 'Ultimus', 'Nordson', 'pressure', 'UltimusV'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'camera': {'type': 'IDS_ueye', 'addresstype': 'zmqNode', 'address': 'procexec', 'settle_time': 5, 'Connected': True, 'descriptors': ['ueye', 'camera']}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['User', 'sensor', 'consol', 'guiconsol']}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}, 'camera@mark': {'X': '', 'Y': '', 'ZZ2': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal', 'camera@mark'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565878251.8840268}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565878252.0565662}], ['->', {'name': 'eproc_camera_Connect', 'information': {}, 'time': 1565878252.3517766}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565878252.536286}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565878252.759686}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565878252.8514407}]]]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', ['gantry', 'pump0', 'aeropump0', 'camera', 'system']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['gantry', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Move', 'Set_Motion', 'set_DO', 'Run', 'getPosition', 'getAI', 'Load', 'LogData_Start', 'LogData_Stop']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['pump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['aeropump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['camera', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Measure', 'Configure']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['system', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Dwell', 'Run']]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent procexec {'subject': 'target.clearProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent procexec {'subject': 'target.clearProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.clearProclist', None]}
Sent appa {'subject': 'target.apparatus.applyTemplate', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', 'e_reply']}, 'kwargs': {'args': [[{'PMMA': 'ZZ1'}], [{'name': 'camera', 'axis': 'ZZ2', 'type': 'IDS_ueye'}]], 'kwargs': {}}, 'args': ['FlexPrinterGUI']}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'camera': {'speed': 40, 'axismask': {'Z': 'ZZ2'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'camera': {'type': 'IDS_ueye', 'addresstype': 'zmqNode', 'address': 'procexec', 'settle_time': 5}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}, 'camera@mark': {'X': '', 'Y': '', 'ZZ2': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal', 'camera@mark'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'gantry', 'axes']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', []]}
Sent procexec {'subject': 'target.getProcedures', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProcedures', []]}
Sent procexec {'subject': 'target.getProclist', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.getProclist', []]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['User', 'User_GUI', 'procexec', 'gui']}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'type']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'type'], 'value': 'User_GUI'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'address']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'address'], 'value': 'gui'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', 'e_reply']}, 'args': [['devices', 'User', 'addresstype']]}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Sent appa {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', 'e_reply']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype'], 'value': 'zmqNode'}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Sent appa {'subject': 'target.apparatus.Connect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', 'e_reply']}, 'kwargs': {'simulation': True}}
Sent procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Handled procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}, 'args': ['User', 'User_GUI', 'gui', 'gui']}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['guiconsol', 'User', 'consol', 'sensor']]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['guiconsol', 'User', 'consol', 'sensor']]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}, 'args': [True]}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}
Handled appa {'subject': 'target.executor.devicelist["User"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}}
Sent appa {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Handled appa {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}, 'args': ['User', 'Connect', 'gui']}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].Connect', 'kwargs': {}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['User is connected.\n']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['sensor', 'motion', 'Aerotech', 'A3200'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'camera': {'speed': 40, 'axismask': {'Z': 'ZZ2'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['pump', 'Ultimus', 'Nordson', 'pressure', 'UltimusV'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['pump', 'Ultimus', 'Nordson', 'A3200', 'pressure', 'UltimusV'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'camera': {'type': 'IDS_ueye', 'addresstype': 'zmqNode', 'address': 'procexec', 'settle_time': 5, 'Connected': True, 'descriptors': ['ueye', 'camera']}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['guiconsol', 'User', 'consol', 'sensor']}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}, 'camera@mark': {'X': '', 'Y': '', 'ZZ2': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal', 'camera@mark'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565879318.2523046}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565879318.4437928}], ['->', {'name': 'eproc_camera_Connect', 'information': {}, 'time': 1565879318.7579546}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565879318.9973137}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565879319.151901}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565879319.2376697}]]]}
Sent procexec {'subject': 'target.executor.getDevices', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', 'e_reply']}, 'args': ['procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDevices', ['gantry', 'pump0', 'aeropump0', 'camera', 'system']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['gantry', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Move', 'Set_Motion', 'set_DO', 'Run', 'getPosition', 'getAI', 'Load', 'LogData_Start', 'LogData_Stop']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['pump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['aeropump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['camera', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Measure', 'Configure']]}
Sent procexec {'subject': 'target.executor.getEprocs', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', 'e_reply']}, 'args': ['system', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getEprocs', ['On', 'Off', 'Set', 'Connect', 'Disconnect', 'Dwell', 'Run']]}
Sent appa {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', 'e_reply']}}
Sent procexec {'subject': 'target.executor.logResponse', 'args': ['User is disconnected.\n']}
Handled procexec {'subject': 'target.executor.devicelist["User"]["Address"].Disconnect', 'kwargs': {}, 'ereply': {'subject': 'target.executor.logResponse', 'args': ['User is disconnected.\n']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['devices']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['sensor', 'motion', 'Aerotech', 'A3200'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'camera': {'speed': 40, 'axismask': {'Z': 'ZZ2'}}, 'Connected': False}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['pump', 'Ultimus', 'Nordson', 'pressure', 'UltimusV'], 'address': 'procexec', 'Connected': False}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['pump', 'Ultimus', 'Nordson', 'A3200', 'pressure', 'UltimusV'], 'address': 'procexec', 'Connected': False, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'camera': {'type': 'IDS_ueye', 'addresstype': 'zmqNode', 'address': 'procexec', 'settle_time': 5, 'Connected': False, 'descriptors': ['ueye', 'camera']}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': False, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': False, 'descriptors': ['guiconsol', 'User', 'consol', 'sensor']}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['information']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}, 'camera@mark': {'X': '', 'Y': '', 'ZZ2': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal', 'camera@mark'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Sent appa {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', 'e_reply']}, 'kwargs': {'address': ['proclog']}}
Handled appa {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565879318.2523046}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565879318.4437928}], ['->', {'name': 'eproc_camera_Connect', 'information': {}, 'time': 1565879318.7579546}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565879318.9973137}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565879319.151901}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565879319.2376697}], ['->', {'name': 'eproc_gantry_Disconnect', 'information': {}, 'time': 1565879352.367906}], ['->', {'name': 'eproc_pump0_Disconnect', 'information': {}, 'time': 1565879352.399819}], ['->', {'name': 'eproc_aeropump0_Disconnect', 'information': {}, 'time': 1565879352.4327316}], ['->', {'name': 'eproc_camera_Disconnect', 'information': {}, 'time': 1565879352.4776127}], ['->', {'name': 'eproc_system_Disconnect', 'information': {}, 'time': 1565879352.5165071}], ['->', {'name': 'eproc_User_Disconnect', 'information': {}, 'time': 1565879352.589312}]]]}
