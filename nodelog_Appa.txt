Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}, 'kwargs': {'address': ['proclog']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Error handling gui {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}}: 'Apparatus' object has no attribute 'ProcLogFile'
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}
Handled gui {'subject': 'target.apparatus.applyTemplate', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}, 'kwargs': {'args': [[{'PMMA': 'ZZ1'}], []], 'kwargs': {}}, 'args': ['FlexPrinterGUI']}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}
Handled gui {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}, 'kwargs': {'infoAddress': ['devices', 'gantry', 'axes']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}, 'kwargs': {'address': ['proclog']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled gui {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['devices', 'User', 'type']]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled gui {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['devices', 'User', 'type'], 'value': 'User_GUI'}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled gui {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['devices', 'User', 'address']]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled gui {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['devices', 'User', 'address'], 'value': 'gui'}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled gui {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['devices', 'User', 'addresstype']]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled gui {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype'], 'value': 'zmqNode'}}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['gantry', 'Aerotech_A3200_FlexPrinter', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["gantry"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDescriptors', ['sensor', 'Aerotech', 'motion', 'A3200']]}
Sent procexec {'subject': 'target.executor.devicelist["gantry"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["gantry"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDependence', False]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['gantry', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'gantry', 'procedure': 'Connect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['pump0', 'Nordson_UltimusV', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["pump0"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDescriptors', ['pump', 'pump', 'pressure', 'Nordson', 'Ultimus', 'UltimusV']]}
Sent procexec {'subject': 'target.executor.devicelist["pump0"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["pump0"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDependence', False]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['pump0', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', ['COM']]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'pump0', 'procedure': 'Connect', 'details': {'COM': ''}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['aeropump0', 'Nordson_UltimusV_A3200', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["aeropump0"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDescriptors', ['pump', 'pump', 'pressure', 'Nordson', 'Ultimus', 'UltimusV', 'A3200']]}
Sent procexec {'subject': 'target.executor.devicelist["aeropump0"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["aeropump0"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDependence', True]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['system', 'System', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["system"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDescriptors', ['system']]}
Sent procexec {'subject': 'target.executor.devicelist["system"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["system"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDependence', False]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['system', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'system', 'procedure': 'Connect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['User', 'User_GUI', 'procexec', 'gui']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent gui {'subject': 'target.executor.devicelist["User"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', 'e_reply']}}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['consol', 'sensor', 'guiconsol', 'User']]}
Sent gui {'subject': 'target.executor.devicelist["User"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}
Sent gui {'subject': 'target.executor.devicelist["User"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', 'e_reply']}}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}
Sent gui {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['User', 'Connect', 'gui']}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'User', 'procedure': 'Connect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.getDependencies', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDependencies', 'e_reply']}, 'args': ['aeropump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDependencies', ['pump', 'A3200']]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['aeropump0', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', ['pumpname', 'pumpaddress', 'A3200name', 'A3200address', 'IOaxis', 'IObit']]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'aeropump0', 'procedure': 'Connect', 'details': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}
Handled gui {'subject': 'target.apparatus.Connect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}, 'kwargs': {'simulation': True}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['A3200', 'Aerotech', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['consol', 'sensor', 'guiconsol', 'User']}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['A3200', 'Aerotech', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['consol', 'sensor', 'guiconsol', 'User']}}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}]]]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}]]]}, 'kwargs': {'address': ['proclog']}}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'StartUp', 'file']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'StartUp', 'info']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'procedures', 'User_Consol_InputOptions', 'result']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'procedures', 'User_Consol_Input', 'result']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', {}]}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', {}]}, 'kwargs': {'infoAddress': ['information', 'StartUp', 'file']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_StartUp', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_StartUp', {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}]}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInputOptions', {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'n'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'n']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'n']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'n']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': None, 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInput', {'message': 'What is your name?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Bob'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Bob']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Bob']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'Bob']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': None, 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInput', {'message': 'What is the lab temperature in Celsius?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': '23'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', '23']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', '23']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', '23']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': None, 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInput', {'message': 'What is the lab relative humidity in percent?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': '23'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', '23']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', '23']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', '23']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': None, 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInput', {'message': 'What are you hoping to accomplish with this experiment?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Bleh and stuff'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Bleh and stuff']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Bleh and stuff']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'Bleh and stuff']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': None, 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInput', {'message': 'How is this experiment different than the last?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Not'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Not']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Not']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'Not']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInputOptions', {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'y'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'y']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'y']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'y']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInputOptions', {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'Name'}}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Name']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Name']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'Name']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': None, 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInput', {'message': 'What is your name?', 'default': None, 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result'], 'value': 'Fred'}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Fred']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'Fred']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'Fred']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_Input', 'end']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}
Handled procexec {'subject': 'target.apparatus.findDevice', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.findDevice', 'User']}, 'args': [{'descriptors': 'consol'}]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'zmqNode']}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'start']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['eproc_User_GetInputOptions', {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}]}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Handled gui {'subject': 'target.apparatus.setValue', 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'value': 'n'}}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'n']}
Handled procexec {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', 'n']}, 'kwargs': {'infoAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'n']}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_Consol_InputOptions', 'end']}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled procexec {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['information', 'StartUp', 'info'], 'value': {'Name': {'message': 'What is your name?', 'default': None, 'answer': 'Fred'}, 'Temperature': {'message': 'What is the lab temperature in Celsius?', 'default': None, 'answer': '23'}, 'Humidity': {'message': 'What is the lab relative humidity in percent?', 'default': None, 'answer': '23'}, 'Reason': {'message': 'What are you hoping to accomplish with this experiment?', 'default': None, 'answer': 'Bleh and stuff'}, 'Difference': {'message': 'How is this experiment different than the last?', 'default': None, 'answer': 'Not'}}}}
Handled procexec {'subject': 'target.apparatus.LogProc', 'args': ['User_StartUp', 'end']}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}], ['->', {'name': 'User_StartUp', 'information': {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}, 'time': 1565961152.5524945}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961152.5864038}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961152.6651947}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961154.2574914}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961154.3043656}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961154.383165}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bob', 'time': 1565961156.1189115}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961156.1627934}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961156.2306128}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961158.6068869}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961158.6512449}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961158.715074}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961159.7542953}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961159.8091497}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961159.8719828}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bleh and stuff', 'time': 1565961165.4296985}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961165.4765732}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961165.543395}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Not', 'time': 1565961168.6634758}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961168.7083566}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961168.7931294}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'y', 'time': 1565961172.0298407}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961172.0747228}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961172.1385517}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'Name', 'time': 1565961173.5044076}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961173.5512836}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961173.6390474}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Fred', 'time': 1565961175.6317208}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961175.678595}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961175.7623706}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961178.7461555}]]]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}], ['->', {'name': 'User_StartUp', 'information': {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}, 'time': 1565961152.5524945}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961152.5864038}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961152.6651947}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961154.2574914}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961154.3043656}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961154.383165}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bob', 'time': 1565961156.1189115}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961156.1627934}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961156.2306128}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961158.6068869}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961158.6512449}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961158.715074}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961159.7542953}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961159.8091497}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961159.8719828}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bleh and stuff', 'time': 1565961165.4296985}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961165.4765732}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961165.543395}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Not', 'time': 1565961168.6634758}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961168.7083566}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961168.7931294}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'y', 'time': 1565961172.0298407}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961172.0747228}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961172.1385517}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'Name', 'time': 1565961173.5044076}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961173.5512836}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961173.6390474}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Fred', 'time': 1565961175.6317208}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961175.678595}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961175.7623706}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961178.7461555}]]]}, 'kwargs': {'address': ['proclog']}}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'gantry', 'procedure': 'Disconnect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'pump0', 'procedure': 'Disconnect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'aeropump0', 'procedure': 'Disconnect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'system', 'procedure': 'Disconnect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'User', 'procedure': 'Disconnect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Handled gui {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['A3200', 'Aerotech', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': False}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': False}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': False, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': False, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': False, 'descriptors': ['consol', 'sensor', 'guiconsol', 'User']}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['A3200', 'Aerotech', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': False}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': False}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'UltimusV', 'pump', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': False, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': False, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': False, 'descriptors': ['consol', 'sensor', 'guiconsol', 'User']}}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}, 'StartUp': {'file': {}, 'info': {'Name': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'answer': 'Fred'}, 'Temperature': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'answer': '23'}, 'Humidity': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'answer': '23'}, 'Reason': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'answer': 'Bleh and stuff'}, 'Difference': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'answer': 'Not'}}}, 'procedures': {'User_Consol_InputOptions': {'result': 'n'}, 'User_Consol_Input': {'result': 'Fred'}}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}, 'StartUp': {'file': {}, 'info': {'Name': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'answer': 'Fred'}, 'Temperature': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'answer': '23'}, 'Humidity': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'answer': '23'}, 'Reason': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'answer': 'Bleh and stuff'}, 'Difference': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'answer': 'Not'}}}, 'procedures': {'User_Consol_InputOptions': {'result': 'n'}, 'User_Consol_Input': {'result': 'Fred'}}}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}], ['->', {'name': 'User_StartUp', 'information': {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}, 'time': 1565961152.5524945}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961152.5864038}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961152.6651947}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961154.2574914}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961154.3043656}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961154.383165}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bob', 'time': 1565961156.1189115}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961156.1627934}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961156.2306128}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961158.6068869}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961158.6512449}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961158.715074}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961159.7542953}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961159.8091497}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961159.8719828}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bleh and stuff', 'time': 1565961165.4296985}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961165.4765732}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961165.543395}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Not', 'time': 1565961168.6634758}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961168.7083566}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961168.7931294}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'y', 'time': 1565961172.0298407}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961172.0747228}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961172.1385517}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'Name', 'time': 1565961173.5044076}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961173.5512836}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961173.6390474}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Fred', 'time': 1565961175.6317208}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961175.678595}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961175.7623706}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961178.7461555}], ['->', {'name': 'eproc_gantry_Disconnect', 'information': {}, 'time': 1565961186.0482252}], ['->', {'name': 'eproc_pump0_Disconnect', 'information': {}, 'time': 1565961186.0661776}], ['->', {'name': 'eproc_aeropump0_Disconnect', 'information': {}, 'time': 1565961186.096839}], ['->', {'name': 'eproc_system_Disconnect', 'information': {}, 'time': 1565961186.1247954}], ['->', {'name': 'eproc_User_Disconnect', 'information': {}, 'time': 1565961186.1437438}]]]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961136.829166}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961136.9179292}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961137.0745106}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961137.121385}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961137.172249}], ['->', {'name': 'User_StartUp', 'information': {'filename': {'source': 'apparatus', 'address': ['information', 'StartUp', 'file'], 'value': {}, 'desc': 'name of start up file'}}, 'time': 1565961152.5524945}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Import start up information from file from file?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'y', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961152.5864038}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Import start up information from file from file?', 'options': ['y', 'n'], 'default': 'y', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961152.6651947}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961154.2574914}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961154.3043656}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961154.383165}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bob', 'time': 1565961156.1189115}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab temperature in Celsius?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961156.1627934}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab temperature in Celsius?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961156.2306128}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961158.6068869}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is the lab relative humidity in percent?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961158.6512449}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is the lab relative humidity in percent?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961158.715074}], ['->', '->', {'name': 'User_Consol_Input', 'information': '23', 'time': 1565961159.7542953}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What are you hoping to accomplish with this experiment?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961159.8091497}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What are you hoping to accomplish with this experiment?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961159.8719828}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Bleh and stuff', 'time': 1565961165.4296985}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'How is this experiment different than the last?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961165.4765732}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'How is this experiment different than the last?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961165.543395}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Not', 'time': 1565961168.6634758}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961168.7083566}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nBob\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961168.7931294}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'y', 'time': 1565961172.0298407}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Which question would you like to redo?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': '', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961172.0747228}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Which question would you like to redo?', 'options': ['Name', 'Temperature', 'Humidity', 'Reason', 'Difference'], 'default': '', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961172.1385517}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'Name', 'time': 1565961173.5044076}], ['->', '->', {'name': 'User_Consol_Input', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'What is your name?', 'desc': 'Message to be displayed'}, 'default': {'source': 'apparatus', 'address': '', 'value': "<class 'NoneType'>", 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_Input', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961173.5512836}], ['->', '->', '->', {'name': 'eproc_User_GetInput', 'information': {'message': 'What is your name?', 'default': "<class 'NoneType'>", 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_Input', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961173.6390474}], ['->', '->', {'name': 'User_Consol_Input', 'information': 'Fred', 'time': 1565961175.6317208}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': {'message': {'source': 'apparatus', 'address': '', 'value': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'desc': 'Message to be displayed'}, 'options': {'source': 'apparatus', 'address': '', 'value': ['y', 'n'], 'desc': 'Possible answers'}, 'default': {'source': 'apparatus', 'address': '', 'value': 'n', 'desc': 'default response'}, 'target': {'source': 'apparatus', 'address': '', 'value': ['information', 'procedures', 'User_Consol_InputOptions', 'result'], 'desc': 'AppAddress where the result is stored'}}, 'time': 1565961175.678595}], ['->', '->', '->', {'name': 'eproc_User_GetInputOptions', 'information': {'message': 'Name\nWhat is your name?\nFred\n\nTemperature\nWhat is the lab temperature in Celsius?\n23\n\nHumidity\nWhat is the lab relative humidity in percent?\n23\n\nReason\nWhat are you hoping to accomplish with this experiment?\nBleh and stuff\n\nDifference\nHow is this experiment different than the last?\nNot\n\nWould you like to redo any questions?', 'options': ['y', 'n'], 'default': 'n', 'address': {'global': 'appa', 'AppAddress': ['information', 'procedures', 'User_Consol_InputOptions', 'result']}, 'addressType': 'zmqNode_AppAddress'}, 'time': 1565961175.7623706}], ['->', '->', {'name': 'User_Consol_InputOptions', 'information': 'n', 'time': 1565961178.7461555}], ['->', {'name': 'eproc_gantry_Disconnect', 'information': {}, 'time': 1565961186.0482252}], ['->', {'name': 'eproc_pump0_Disconnect', 'information': {}, 'time': 1565961186.0661776}], ['->', {'name': 'eproc_aeropump0_Disconnect', 'information': {}, 'time': 1565961186.096839}], ['->', {'name': 'eproc_system_Disconnect', 'information': {}, 'time': 1565961186.1247954}], ['->', {'name': 'eproc_User_Disconnect', 'information': {}, 'time': 1565961186.1437438}]]]}, 'kwargs': {'address': ['proclog']}}
Handled launcher {'subject': 'close'}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}, 'kwargs': {'address': ['proclog']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}
Handled gui {'subject': 'target.apparatus.Disconnect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Disconnect_All', None]}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}
Handled gui {'subject': 'target.apparatus.applyTemplate', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.applyTemplate', None]}, 'kwargs': {'args': [[{'PMMA': 'ZZ1'}], []], 'kwargs': {}}, 'args': ['FlexPrinterGUI']}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA']}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide']}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': [], 'address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec'}}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}
Handled gui {'subject': 'target.apparatus.getValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.getValue', ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4']]}, 'kwargs': {'infoAddress': ['devices', 'gantry', 'axes']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', []]}, 'kwargs': {'address': ['proclog']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled gui {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['devices', 'User', 'type']]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled gui {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['devices', 'User', 'type'], 'value': 'User_GUI'}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled gui {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['devices', 'User', 'address']]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled gui {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['devices', 'User', 'address'], 'value': 'gui'}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled gui {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['devices', 'User', 'addresstype']]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}
Handled gui {'subject': 'target.apparatus.setValue', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.setValue', None]}, 'kwargs': {'infoAddress': ['devices', 'User', 'addresstype'], 'value': 'zmqNode'}}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['gantry', 'Aerotech_A3200_FlexPrinter', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["gantry"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDescriptors', ['A3200', 'Aerotech', 'motion', 'sensor']]}
Sent procexec {'subject': 'target.executor.devicelist["gantry"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["gantry"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["gantry"]["Address"].getDependence', False]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['gantry', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'gantry', 'procedure': 'Connect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['pump0', 'Nordson_UltimusV', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["pump0"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDescriptors', ['pump', 'pump', 'pressure', 'Nordson', 'Ultimus', 'UltimusV']]}
Sent procexec {'subject': 'target.executor.devicelist["pump0"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["pump0"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["pump0"]["Address"].getDependence', False]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['pump0', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', ['COM']]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'pump0', 'procedure': 'Connect', 'details': {'COM': ''}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['aeropump0', 'Nordson_UltimusV_A3200', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["aeropump0"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDescriptors', ['pump', 'pump', 'pressure', 'Nordson', 'Ultimus', 'UltimusV', 'A3200']]}
Sent procexec {'subject': 'target.executor.devicelist["aeropump0"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["aeropump0"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["aeropump0"]["Address"].getDependence', True]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['system', 'System', 'procexec', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent procexec {'subject': 'target.executor.devicelist["system"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDescriptors', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDescriptors', ['system']]}
Sent procexec {'subject': 'target.executor.devicelist["system"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].setSimulation', None]}
Sent procexec {'subject': 'target.executor.devicelist["system"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDependence', 'e_reply']}}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["system"]["Address"].getDependence', False]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['system', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'system', 'procedure': 'Connect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.createDevice', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', 'e_reply']}, 'args': ['User', 'User_GUI', 'procexec', 'gui']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.createDevice', True]}
Sent gui {'subject': 'target.executor.devicelist["User"]["Address"].getDescriptors', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', 'e_reply']}}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDescriptors', ['User', 'sensor', 'consol', 'guiconsol']]}
Sent gui {'subject': 'target.executor.devicelist["User"]["Address"].setSimulation', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', 'e_reply']}, 'args': [True]}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].setSimulation', None]}
Sent gui {'subject': 'target.executor.devicelist["User"]["Address"].getDependence', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', 'e_reply']}}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.devicelist["User"]["Address"].getDependence', False]}
Sent gui {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['User', 'Connect', 'gui']}
Handled gui {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', []]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'User', 'procedure': 'Connect', 'details': {}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent procexec {'subject': 'target.executor.getDependencies', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDependencies', 'e_reply']}, 'args': ['aeropump0', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getDependencies', ['pump', 'A3200']]}
Sent procexec {'subject': 'target.executor.getRequirements', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', 'e_reply']}, 'args': ['aeropump0', 'Connect', 'procexec']}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.getRequirements', ['pumpname', 'pumpaddress', 'A3200name', 'A3200address', 'IOaxis', 'IObit']]}
Sent procexec {'subject': 'target.executor.execute', 'ereply': {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', 'e_reply']}, 'args': [[[{'devices': 'aeropump0', 'procedure': 'Connect', 'details': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}}]]]}
Handled procexec {'subject': 'target.executor.recv_value', 'args': ['target.executor.execute', None]}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}
Handled gui {'subject': 'target.apparatus.Connect_All', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.Connect_All', None]}, 'kwargs': {'simulation': True}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['Aerotech', 'A3200', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'pump', 'UltimusV', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'pump', 'UltimusV', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['User', 'sensor', 'consol', 'guiconsol']}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'gantry': {'type': 'Aerotech_A3200_FlexPrinter', 'model': 'Flex Printer', 'descriptors': ['Aerotech', 'A3200', 'sensor', 'motion'], 'addresstype': 'zmqNode', 'address': 'procexec', 'axes': ['X', 'Y', 'ZZ1', 'ZZ2', 'ZZ3', 'ZZ4'], 'default': {'speed': 40, 'length_units': 'mm', 'MotionRamp': 1000, 'MaxAccel': 1000, 'RelAbs': 'Abs', 'LookAhead': True, 'mode': 'loadrun', 'axismask': {}}, 'nPMMA': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'nPMMAslide': {'speed': 40, 'MotionRamp': 1000, 'MaxAccel': 1000, 'axismask': {'Z': 'ZZ1'}}, 'Connected': True}, 'nPMMA': {'ID': '', 'OD': '', 'traceheight': '', 'tracewidth': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMA'], 'Connected': False}, 'nPMMAslide': {'ID': '', 'OD': '', 'type': '', 'addresstype': '', 'descriptors': ['nozzle', 'PMMAslide'], 'Connected': False}, 'pump0': {'type': 'Nordson_UltimusV', 'COM': '', 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'pump', 'UltimusV', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True}, 'aeropump0': {'type': 'Nordson_UltimusV_A3200', 'pumpname': 'pump0', 'A3200name': 'gantry', 'IOaxis': 'ZZ1', 'IObit': 2, 'pressure': 0, 'vacuum': 0, 'pumpres_time': 0, 'pumpon_time': 0, 'pumpoff_time': 0, 'mid_time': 0, 'addresstype': 'zmqNode', 'descriptors': ['Ultimus', 'pump', 'UltimusV', 'A3200', 'Nordson', 'pressure'], 'address': 'procexec', 'Connected': True, 'pumpaddress': 'procexec', 'A3200address': 'procexec'}, 'system': {'type': 'System', 'addresstype': 'zmqNode', 'address': 'procexec', 'Connected': True, 'descriptors': ['system']}, 'User': {'type': 'User_GUI', 'address': 'gui', 'addresstype': 'zmqNode', 'Connected': True, 'descriptors': ['User', 'sensor', 'consol', 'guiconsol']}}]}, 'kwargs': {'address': ['devices']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', {'materials': {'PMMA': {'calibrated': False, 'do_pumpcal': True, 'do_speedcal': True}}, 'alignments': {'initial': {'X': '', 'Y': '', 'ZZ1': '', 'ZZ2': '', 'ZZ3': '', 'ZZ4': ''}, 'nPMMA@mark': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@start': {'X': '', 'Y': '', 'ZZ1': ''}, 'nPMMA@cal': {'X': '', 'Y': '', 'ZZ1': ''}}, 'alignmentnames': ['initial', 'nPMMA@mark', 'nPMMA@start', 'nPMMA@cal'], 'alignmentsfile': 'alignments.json', 'calibrationfile': 'cal.json', 'ink calibration': {'time': 60}}]}, 'kwargs': {'address': ['information']}}
Sent gui {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961396.6600344}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961396.7747283}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961396.9352982}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961396.9991279}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961397.0479977}]]]}
Handled gui {'subject': 'target.apparatus.serialClone', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.serialClone', [['->', {'name': 'eproc_gantry_Connect', 'information': {}, 'time': 1565961396.6600344}], ['->', {'name': 'eproc_pump0_Connect', 'information': {'COM': ''}, 'time': 1565961396.7747283}], ['->', {'name': 'eproc_system_Connect', 'information': {}, 'time': 1565961396.9352982}], ['->', {'name': 'eproc_User_Connect', 'information': {}, 'time': 1565961396.9991279}], ['->', {'name': 'eproc_aeropump0_Connect', 'information': {'pumpname': 'pump0', 'pumpaddress': 'procexec', 'A3200name': 'gantry', 'A3200address': 'procexec', 'IOaxis': 'ZZ1', 'IObit': 2}, 'time': 1565961397.0479977}]]]}, 'kwargs': {'address': ['proclog']}}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'StartUp', 'file']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'StartUp', 'info']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'procedures', 'User_Consol_InputOptions', 'result']]}
Sent procexec {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}
Handled procexec {'subject': 'target.apparatus.createAppEntry', 'ereply': {'subject': 'target.apparatus.recv_value', 'args': ['target.apparatus.createAppEntry', None]}, 'args': [['information', 'procedures', 'User_Consol_Input', 'result']]}
Handled launcher {'subject': 'close'}
